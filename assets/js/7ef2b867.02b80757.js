"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[2257],{3905:function(e,t,a){a.d(t,{Zo:function(){return p},kt:function(){return f}});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var u=n.createContext({}),i=function(e){var t=n.useContext(u),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},p=function(e){var t=i(e.components);return n.createElement(u.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},g=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,u=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),g=i(a),f=r,d=g["".concat(u,".").concat(f)]||g[f]||c[f]||l;return a?n.createElement(d,o(o({ref:t},p),{},{components:a})):n.createElement(d,o({ref:t},p))}));function f(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,o=new Array(l);o[0]=g;var s={};for(var u in t)hasOwnProperty.call(t,u)&&(s[u]=t[u]);s.originalType=e,s.mdxType="string"==typeof e?e:r,o[1]=s;for(var i=2;i<l;i++)o[i]=a[i];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}g.displayName="MDXCreateElement"},1475:function(e,t,a){a.r(t),a.d(t,{assets:function(){return p},contentTitle:function(){return u},default:function(){return f},frontMatter:function(){return s},metadata:function(){return i},toc:function(){return c}});var n=a(7462),r=a(3366),l=(a(7294),a(3905)),o=["components"],s={sidebar_position:4},u="Scheduler",i={unversionedId:"architecture/scheduler",id:"architecture/scheduler",title:"Scheduler",description:"The scheduler is the brain of the entire architecture. It is the central point of communication between the clients and the backend services, manages all the databases, coordinates and distributes tasks to the NLU and R3D, processes all metrics, and a lot more things.",source:"@site/docs/architecture/scheduler.md",sourceDirName:"architecture",slug:"/architecture/scheduler",permalink:"/docs/architecture/scheduler",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/architecture/scheduler.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"R3D",permalink:"/docs/architecture/r3d"},next:{title:"GraphQL Schema",permalink:"/docs/architecture/schema"}},p={},c=[{value:"Index",id:"index",level:2},{value:"func Recovery",id:"func-recovery",level:2},{value:"func Serve",id:"func-serve",level:2},{value:"Index",id:"index-1",level:2},{value:"type BadgerClient",id:"type-badgerclient",level:2},{value:"func (BadgerClient) Get",id:"func-badgerclient-get",level:3},{value:"func (BadgerClient) Iterate",id:"func-badgerclient-iterate",level:3},{value:"func (BadgerClient) Save",id:"func-badgerclient-save",level:3},{value:"type SQLClient",id:"type-sqlclient",level:2},{value:"func NewSQLiteDB",id:"func-newsqlitedb",level:3},{value:"func (*SQLClient) Insert",id:"func-sqlclient-insert",level:3},{value:"func (*SQLClient) Open",id:"func-sqlclient-open",level:3},{value:"Index",id:"index-2",level:2},{value:"func GeneratePin",id:"func-generatepin",level:2},{value:"func Map",id:"func-map",level:2},{value:"func Max",id:"func-max",level:2},{value:"func StringInSlice",id:"func-stringinslice",level:2},{value:"type Set",id:"type-set",level:2},{value:"func New",id:"func-new",level:3},{value:"func (BADRECV) Add",id:"func-badrecv-add",level:3},{value:"func (BADRECV) Clone",id:"func-badrecv-clone",level:3},{value:"func (BADRECV) Delete",id:"func-badrecv-delete",level:3},{value:"func (BADRECV) Has",id:"func-badrecv-has",level:3},{value:"func (BADRECV) Intersection",id:"func-badrecv-intersection",level:3},{value:"func (BADRECV) Iterate",id:"func-badrecv-iterate",level:3},{value:"func (BADRECV) Len",id:"func-badrecv-len",level:3},{value:"func (BADRECV) Union",id:"func-badrecv-union",level:3},{value:"func (BADRECV) Values",id:"func-badrecv-values",level:3},{value:"Index",id:"index-3",level:2},{value:"Variables",id:"variables",level:2},{value:"type Action",id:"type-action",level:2},{value:"func CreateActions",id:"func-createactions",level:3},{value:"func (Action) GetURL",id:"func-action-geturl",level:3},{value:"type ActionType",id:"type-actiontype",level:2},{value:"type Actions",id:"type-actions",level:2},{value:"type CellData",id:"type-celldata",level:2},{value:"type CellDataBuffer",id:"type-celldatabuffer",level:2},{value:"func (*CellDataBuffer) Descriptor",id:"func-celldatabuffer-descriptor",level:3},{value:"func (*CellDataBuffer) GetInput",id:"func-celldatabuffer-getinput",level:3},{value:"func (*CellDataBuffer) GetOutput",id:"func-celldatabuffer-getoutput",level:3},{value:"func (*CellDataBuffer) ProtoMessage",id:"func-celldatabuffer-protomessage",level:3},{value:"func (*CellDataBuffer) ProtoReflect",id:"func-celldatabuffer-protoreflect",level:3},{value:"func (*CellDataBuffer) Reset",id:"func-celldatabuffer-reset",level:3},{value:"func (*CellDataBuffer) String",id:"func-celldatabuffer-string",level:3},{value:"type Metrics",id:"type-metrics",level:2},{value:"type Model",id:"type-model",level:2},{value:"type NotebookDataBuffer",id:"type-notebookdatabuffer",level:2},{value:"func (*NotebookDataBuffer) Descriptor",id:"func-notebookdatabuffer-descriptor",level:3},{value:"func (*NotebookDataBuffer) GetCelldata",id:"func-notebookdatabuffer-getcelldata",level:3},{value:"func (*NotebookDataBuffer) ProtoMessage",id:"func-notebookdatabuffer-protomessage",level:3},{value:"func (*NotebookDataBuffer) ProtoReflect",id:"func-notebookdatabuffer-protoreflect",level:3},{value:"func (*NotebookDataBuffer) Reset",id:"func-notebookdatabuffer-reset",level:3},{value:"func (*NotebookDataBuffer) String",id:"func-notebookdatabuffer-string",level:3},{value:"type ParsedCellDataBuffer",id:"type-parsedcelldatabuffer",level:2},{value:"func (*ParsedCellDataBuffer) Descriptor",id:"func-parsedcelldatabuffer-descriptor",level:3},{value:"func (*ParsedCellDataBuffer) GetFunctions",id:"func-parsedcelldatabuffer-getfunctions",level:3},{value:"func (*ParsedCellDataBuffer) GetModules",id:"func-parsedcelldatabuffer-getmodules",level:3},{value:"func (*ParsedCellDataBuffer) GetSyntaxErrors",id:"func-parsedcelldatabuffer-getsyntaxerrors",level:3},{value:"func (*ParsedCellDataBuffer) ProtoMessage",id:"func-parsedcelldatabuffer-protomessage",level:3},{value:"func (*ParsedCellDataBuffer) ProtoReflect",id:"func-parsedcelldatabuffer-protoreflect",level:3},{value:"func (*ParsedCellDataBuffer) Reset",id:"func-parsedcelldatabuffer-reset",level:3},{value:"func (*ParsedCellDataBuffer) String",id:"func-parsedcelldatabuffer-string",level:3},{value:"type ParsedNotebookDataBuffer",id:"type-parsednotebookdatabuffer",level:2},{value:"func (*ParsedNotebookDataBuffer) Descriptor",id:"func-parsednotebookdatabuffer-descriptor",level:3},{value:"func (*ParsedNotebookDataBuffer) GetCelldata",id:"func-parsednotebookdatabuffer-getcelldata",level:3},{value:"func (*ParsedNotebookDataBuffer) ProtoMessage",id:"func-parsednotebookdatabuffer-protomessage",level:3},{value:"func (*ParsedNotebookDataBuffer) ProtoReflect",id:"func-parsednotebookdatabuffer-protoreflect",level:3},{value:"func (*ParsedNotebookDataBuffer) Reset",id:"func-parsednotebookdatabuffer-reset",level:3},{value:"func (*ParsedNotebookDataBuffer) String",id:"func-parsednotebookdatabuffer-string",level:3},{value:"type Question",id:"type-question",level:2},{value:"func ParseQuestion",id:"func-parsequestion",level:3},{value:"type RulesType",id:"type-rulestype",level:2},{value:"type SQLQuestion",id:"type-sqlquestion",level:2},{value:"type SQLSession",id:"type-sqlsession",level:2},{value:"type SQLStudent",id:"type-sqlstudent",level:2},{value:"type SQLTest",id:"type-sqltest",level:2},{value:"type Status",id:"type-status",level:2},{value:"type Student",id:"type-student",level:2},{value:"func NewStudent",id:"func-newstudent",level:3},{value:"type StudentList",id:"type-studentlist",level:2},{value:"func NewStudentList",id:"func-newstudentlist",level:3},{value:"func (StudentList) ToCSVString",id:"func-studentlist-tocsvstring",level:3},{value:"type TriggerStatus",id:"type-triggerstatus",level:2},{value:"Index",id:"index-4",level:2},{value:"func StudentList",id:"func-studentlist",level:2},{value:"Index",id:"index-5",level:2},{value:"type Action",id:"type-action-1",level:2},{value:"type ActionType",id:"type-actiontype-1",level:2},{value:"type Actions",id:"type-actions-1",level:2},{value:"type Broker",id:"type-broker",level:2},{value:"type Database",id:"type-database",level:2},{value:"type Manager",id:"type-manager",level:2},{value:"func NewManager",id:"func-newmanager",level:3},{value:"func (*Manager) CheckScaffoldingConfig",id:"func-manager-checkscaffoldingconfig",level:3},{value:"func (*Manager) FetchData",id:"func-manager-fetchdata",level:3},{value:"func (*Manager) GeneratePins",id:"func-manager-generatepins",level:3},{value:"func (*Manager) GetActiveTests",id:"func-manager-getactivetests",level:3},{value:"func (*Manager) GetQuestion",id:"func-manager-getquestion",level:3},{value:"func (*Manager) GetQuestions",id:"func-manager-getquestions",level:3},{value:"func (*Manager) Login",id:"func-manager-login",level:3},{value:"func (*Manager) OpenTest",id:"func-manager-opentest",level:3},{value:"func (*Manager) SSEHandler",id:"func-manager-ssehandler",level:3},{value:"func (*Manager) SaveQuestion",id:"func-manager-savequestion",level:3},{value:"func (*Manager) SaveTest",id:"func-manager-savetest",level:3},{value:"func (*Manager) SetupTestLoop",id:"func-manager-setuptestloop",level:3},{value:"func (*Manager) Start",id:"func-manager-start",level:3},{value:"func (*Manager) Submit",id:"func-manager-submit",level:3},{value:"func (*Manager) UpdateMetrics",id:"func-manager-updatemetrics",level:3},{value:"func (*Manager) VerifySession",id:"func-manager-verifysession",level:3},{value:"type Scheduler",id:"type-scheduler",level:2},{value:"func (*Scheduler) SetupActionLoop",id:"func-scheduler-setupactionloop",level:3},{value:"func (*Scheduler) SetupJupyterHeartbeat",id:"func-scheduler-setupjupyterheartbeat",level:3},{value:"type Session",id:"type-session",level:2},{value:"func (*Session) CheckError",id:"func-session-checkerror",level:3},{value:"func (Session) CheckResponsiveness",id:"func-session-checkresponsiveness",level:3},{value:"func (*Session) GetTriggers",id:"func-session-gettriggers",level:3},{value:"func (*Session) TriggerAction",id:"func-session-triggeraction",level:3},{value:"func (*Session) Update",id:"func-session-update",level:3},{value:"func (*Session) UpdateError",id:"func-session-updateerror",level:3},{value:"func (*Session) UpdateModuleAndFunctionUsage",id:"func-session-updatemoduleandfunctionusage",level:3},{value:"func (*Session) UpdateResponsiveness",id:"func-session-updateresponsiveness",level:3},{value:"type Test",id:"type-test",level:2},{value:"func (*Test) Close",id:"func-test-close",level:3},{value:"func (*Test) CreateSession",id:"func-test-createsession",level:3},{value:"func (*Test) Serialize",id:"func-test-serialize",level:3},{value:"func (*Test) SetupMetricLoop",id:"func-test-setupmetricloop",level:3},{value:"func (*Test) Start",id:"func-test-start",level:3},{value:"type TestScheduler",id:"type-testscheduler",level:2},{value:"func NewTestScheduler",id:"func-newtestscheduler",level:3},{value:"Index",id:"index-6",level:2},{value:"type ParsedPython",id:"type-parsedpython",level:2},{value:"type ZerqMQBroker",id:"type-zerqmqbroker",level:2},{value:"func NewZMQSocket",id:"func-newzmqsocket",level:3},{value:"func (*ZerqMQBroker) Bind",id:"func-zerqmqbroker-bind",level:3},{value:"func (*ZerqMQBroker) Connect",id:"func-zerqmqbroker-connect",level:3},{value:"func (*ZerqMQBroker) ParseNotebookData",id:"func-zerqmqbroker-parsenotebookdata",level:3},{value:"func (*ZerqMQBroker) Send",id:"func-zerqmqbroker-send",level:3}],g={toc:c};function f(e){var t=e.components,a=(0,r.Z)(e,o);return(0,l.kt)("wrapper",(0,n.Z)({},g,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"scheduler"},"Scheduler"),(0,l.kt)("p",null,"The scheduler is the brain of the entire architecture. It is the central point of communication between the clients and the backend services, manages all the databases, coordinates and distributes tasks to the NLU and R3D, processes all metrics, and a lot more things."),(0,l.kt)("p",null,"The internal function of the scheduler is not necessary for usage of EASEx. The developers are request to kindly have a look at the GoDoc below:"),(0,l.kt)("h1",{id:"api"},"api"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},'import "github.com/ECA-Learning/ECAL-Proxy/pkg/api"\n')),(0,l.kt)("h2",{id:"index"},"Index"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#func-recovery"},"func Recovery(next http.Handler) http.Handler")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#func-serve"},"func Serve() error"))),(0,l.kt)("h2",{id:"func-recovery"},"func ",(0,l.kt)("a",{parentName:"h2",href:"https://github.com/ECA-Learning/ECAL-Proxy/blob/golang/alpha/pkg/api/recover.go#L11"},"Recovery")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},"func Recovery(next http.Handler) http.Handler\n")),(0,l.kt)("h2",{id:"func-serve"},"func ",(0,l.kt)("a",{parentName:"h2",href:"https://github.com/ECA-Learning/ECAL-Proxy/blob/golang/alpha/pkg/api/server.go#L21"},"Serve")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},"func Serve() error\n")),(0,l.kt)("h1",{id:"database"},"database"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},'import "github.com/ECA-Learning/ECAL-Proxy/pkg/database"\n')),(0,l.kt)("h2",{id:"index-1"},"Index"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#type-badgerclient"},"type BadgerClient"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#func-badgerclient-get"},"func (b BadgerClient) Get(key string, dest interface{}) error")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#func-badgerclient-iterate"},"func (b BadgerClient) Iterate(callback func(k, v []byte, txn ","*","badger.Txn) error) error")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#func-badgerclient-save"},"func (b BadgerClient) Save(key string, value interface{}) error")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#type-sqlclient"},"type SQLClient"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#func-newsqlitedb"},"func NewSQLiteDB(path string) SQLClient")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#func-sqlclient-insert"},"func (s ","*","SQLClient) Insert(value interface{}) error")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#func-sqlclient-open"},"func (s ","*","SQLClient) Open(models ...interface{})"))))),(0,l.kt)("h2",{id:"type-badgerclient"},"type ",(0,l.kt)("a",{parentName:"h2",href:"https://github.com/ECA-Learning/ECAL-Proxy/blob/golang/alpha/pkg/database/badger.go#L12-L14"},"BadgerClient")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},"type BadgerClient struct {\n    *badger.DB\n}\n")),(0,l.kt)("h3",{id:"func-badgerclient-get"},"func ","(","BadgerClient",")"," ",(0,l.kt)("a",{parentName:"h3",href:"https://github.com/ECA-Learning/ECAL-Proxy/blob/golang/alpha/pkg/database/badger.go#L29"},"Get")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},"func (b BadgerClient) Get(key string, dest interface{}) error\n")),(0,l.kt)("h3",{id:"func-badgerclient-iterate"},"func ","(","BadgerClient",")"," ",(0,l.kt)("a",{parentName:"h3",href:"https://github.com/ECA-Learning/ECAL-Proxy/blob/golang/alpha/pkg/database/badger.go#L54"},"Iterate")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},"func (b BadgerClient) Iterate(callback func(k, v []byte, txn *badger.Txn) error) error\n")),(0,l.kt)("h3",{id:"func-badgerclient-save"},"func ","(","BadgerClient",")"," ",(0,l.kt)("a",{parentName:"h3",href:"https://github.com/ECA-Learning/ECAL-Proxy/blob/golang/alpha/pkg/database/badger.go#L16"},"Save")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},"func (b BadgerClient) Save(key string, value interface{}) error\n")),(0,l.kt)("h2",{id:"type-sqlclient"},"type ",(0,l.kt)("a",{parentName:"h2",href:"https://github.com/ECA-Learning/ECAL-Proxy/blob/golang/alpha/pkg/database/sqlite.go#L11-L14"},"SQLClient")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},"type SQLClient struct {\n    *gorm.DB\n    Path string\n}\n")),(0,l.kt)("h3",{id:"func-newsqlitedb"},"func ",(0,l.kt)("a",{parentName:"h3",href:"https://github.com/ECA-Learning/ECAL-Proxy/blob/golang/alpha/pkg/database/sqlite.go#L16"},"NewSQLiteDB")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},"func NewSQLiteDB(path string) SQLClient\n")),(0,l.kt)("h3",{id:"func-sqlclient-insert"},"func ","(","*","SQLClient",")"," ",(0,l.kt)("a",{parentName:"h3",href:"https://github.com/ECA-Learning/ECAL-Proxy/blob/golang/alpha/pkg/database/sqlite.go#L36"},"Insert")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},"func (s *SQLClient) Insert(value interface{}) error\n")),(0,l.kt)("h3",{id:"func-sqlclient-open"},"func ","(","*","SQLClient",")"," ",(0,l.kt)("a",{parentName:"h3",href:"https://github.com/ECA-Learning/ECAL-Proxy/blob/golang/alpha/pkg/database/sqlite.go#L21"},"Open")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},"func (s *SQLClient) Open(models ...interface{})\n")),(0,l.kt)("h1",{id:"mathx"},"mathx"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},'import "github.com/ECA-Learning/ECAL-Proxy/pkg/mathx"\n')),(0,l.kt)("h2",{id:"index-2"},"Index"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#func-generatepin"},"func GeneratePin() (string, error)")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#func-map"},"func Map[T1 any, T2 any](array []T1, f func(T1) T2) []T2")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#func-max"},"func Max(x, y int64) int64")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#func-stringinslice"},"func StringInSlice(a string, list []string) bool")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#type-set"},"type Set"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#func-new"},"func New[T comparable]() Set[T]")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#func-badrecv-add"},"func (s Set[T]) Add(values ...T)")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#func-badrecv-clone"},"func (s Set[T]) Clone() Set[T]")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#func-badrecv-delete"},"func (s Set[T]) Delete(values ...T)")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#func-badrecv-has"},"func (s Set[T]) Has(value T) bool")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#func-badrecv-intersection"},"func (s Set[T]) Intersection(other Set[T]) Set[T]")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#func-badrecv-iterate"},"func (s Set[T]) Iterate(it func(T))")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#func-badrecv-len"},"func (s Set[T]) Len() int")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#func-badrecv-union"},"func (s Set[T]) Union(other Set[T]) Set[T]")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#func-badrecv-values"},"func (s Set[T]) Values() []T"))))),(0,l.kt)("h2",{id:"func-generatepin"},"func ",(0,l.kt)("a",{parentName:"h2",href:"https://github.com/ECA-Learning/ECAL-Proxy/blob/golang/alpha/pkg/mathx/math.go#L21"},"GeneratePin")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},"func GeneratePin() (string, error)\n")),(0,l.kt)("h2",{id:"func-map"},"func ",(0,l.kt)("a",{parentName:"h2",href:"https://github.com/ECA-Learning/ECAL-Proxy/blob/golang/alpha/pkg/mathx/map.go#L3"},"Map")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},"func Map[T1 any, T2 any](array []T1, f func(T1) T2) []T2\n")),(0,l.kt)("h2",{id:"func-max"},"func ",(0,l.kt)("a",{parentName:"h2",href:"https://github.com/ECA-Learning/ECAL-Proxy/blob/golang/alpha/pkg/mathx/math.go#L5"},"Max")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},"func Max(x, y int64) int64\n")),(0,l.kt)("h2",{id:"func-stringinslice"},"func ",(0,l.kt)("a",{parentName:"h2",href:"https://github.com/ECA-Learning/ECAL-Proxy/blob/golang/alpha/pkg/mathx/math.go#L12"},"StringInSlice")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},"func StringInSlice(a string, list []string) bool\n")),(0,l.kt)("h2",{id:"type-set"},"type ",(0,l.kt)("a",{parentName:"h2",href:"https://github.com/ECA-Learning/ECAL-Proxy/blob/golang/alpha/pkg/mathx/set.go#L3"},"Set")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},"type Set[T comparable] map[T]bool\n")),(0,l.kt)("h3",{id:"func-new"},"func ",(0,l.kt)("a",{parentName:"h3",href:"https://github.com/ECA-Learning/ECAL-Proxy/blob/golang/alpha/pkg/mathx/set.go#L5"},"New")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},"func New[T comparable]() Set[T]\n")),(0,l.kt)("h3",{id:"func-badrecv-add"},"func ","(","BADRECV",")"," ",(0,l.kt)("a",{parentName:"h3",href:"https://github.com/ECA-Learning/ECAL-Proxy/blob/golang/alpha/pkg/mathx/set.go#L9"},"Add")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},"func (s Set[T]) Add(values ...T)\n")),(0,l.kt)("h3",{id:"func-badrecv-clone"},"func ","(","BADRECV",")"," ",(0,l.kt)("a",{parentName:"h3",href:"https://github.com/ECA-Learning/ECAL-Proxy/blob/golang/alpha/pkg/mathx/set.go#L44"},"Clone")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},"func (s Set[T]) Clone() Set[T]\n")),(0,l.kt)("h3",{id:"func-badrecv-delete"},"func ","(","BADRECV",")"," ",(0,l.kt)("a",{parentName:"h3",href:"https://github.com/ECA-Learning/ECAL-Proxy/blob/golang/alpha/pkg/mathx/set.go#L15"},"Delete")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},"func (s Set[T]) Delete(values ...T)\n")),(0,l.kt)("h3",{id:"func-badrecv-has"},"func ","(","BADRECV",")"," ",(0,l.kt)("a",{parentName:"h3",href:"https://github.com/ECA-Learning/ECAL-Proxy/blob/golang/alpha/pkg/mathx/set.go#L25"},"Has")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},"func (s Set[T]) Has(value T) bool\n")),(0,l.kt)("h3",{id:"func-badrecv-intersection"},"func ","(","BADRECV",")"," ",(0,l.kt)("a",{parentName:"h3",href:"https://github.com/ECA-Learning/ECAL-Proxy/blob/golang/alpha/pkg/mathx/set.go#L56"},"Intersection")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},"func (s Set[T]) Intersection(other Set[T]) Set[T]\n")),(0,l.kt)("h3",{id:"func-badrecv-iterate"},"func ","(","BADRECV",")"," ",(0,l.kt)("a",{parentName:"h3",href:"https://github.com/ECA-Learning/ECAL-Proxy/blob/golang/alpha/pkg/mathx/set.go#L30"},"Iterate")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},"func (s Set[T]) Iterate(it func(T))\n")),(0,l.kt)("h3",{id:"func-badrecv-len"},"func ","(","BADRECV",")"," ",(0,l.kt)("a",{parentName:"h3",href:"https://github.com/ECA-Learning/ECAL-Proxy/blob/golang/alpha/pkg/mathx/set.go#L21"},"Len")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},"func (s Set[T]) Len() int\n")),(0,l.kt)("h3",{id:"func-badrecv-union"},"func ","(","BADRECV",")"," ",(0,l.kt)("a",{parentName:"h3",href:"https://github.com/ECA-Learning/ECAL-Proxy/blob/golang/alpha/pkg/mathx/set.go#L50"},"Union")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},"func (s Set[T]) Union(other Set[T]) Set[T]\n")),(0,l.kt)("h3",{id:"func-badrecv-values"},"func ","(","BADRECV",")"," ",(0,l.kt)("a",{parentName:"h3",href:"https://github.com/ECA-Learning/ECAL-Proxy/blob/golang/alpha/pkg/mathx/set.go#L36"},"Values")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},"func (s Set[T]) Values() []T\n")),(0,l.kt)("h1",{id:"models"},"models"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},'import "github.com/ECA-Learning/ECAL-Proxy/pkg/models"\n')),(0,l.kt)("h2",{id:"index-3"},"Index"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#variables"},"Variables")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#type-action"},"type Action"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#func-createactions"},"func CreateActions(upload graphql.Upload) []Action")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#func-action-geturl"},"func (a Action) GetURL() url.URL")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#type-actiontype"},"type ActionType")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#type-actions"},"type Actions")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#type-celldata"},"type CellData")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#type-celldatabuffer"},"type CellDataBuffer"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#func-celldatabuffer-descriptor"},"func (","*","CellDataBuffer) Descriptor() ([]byte, []int)")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#func-celldatabuffer-getinput"},"func (x ","*","CellDataBuffer) GetInput() string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#func-celldatabuffer-getoutput"},"func (x ","*","CellDataBuffer) GetOutput() string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#func-celldatabuffer-protomessage"},"func (","*","CellDataBuffer) ProtoMessage()")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#func-celldatabuffer-protoreflect"},"func (x ","*","CellDataBuffer) ProtoReflect() protoreflect.Message")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#func-celldatabuffer-reset"},"func (x ","*","CellDataBuffer) Reset()")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#func-celldatabuffer-string"},"func (x ","*","CellDataBuffer) String() string")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#type-metrics"},"type Metrics")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#type-model"},"type Model")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#type-notebookdatabuffer"},"type NotebookDataBuffer"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#func-notebookdatabuffer-descriptor"},"func (","*","NotebookDataBuffer) Descriptor() ([]byte, []int)")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#func-notebookdatabuffer-getcelldata"},"func (x ",(0,l.kt)("em",{parentName:"a"},"NotebookDataBuffer) GetCelldata() []"),"CellDataBuffer")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#func-notebookdatabuffer-protomessage"},"func (","*","NotebookDataBuffer) ProtoMessage()")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#func-notebookdatabuffer-protoreflect"},"func (x ","*","NotebookDataBuffer) ProtoReflect() protoreflect.Message")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#func-notebookdatabuffer-reset"},"func (x ","*","NotebookDataBuffer) Reset()")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#func-notebookdatabuffer-string"},"func (x ","*","NotebookDataBuffer) String() string")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#type-parsedcelldatabuffer"},"type ParsedCellDataBuffer"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#func-parsedcelldatabuffer-descriptor"},"func (","*","ParsedCellDataBuffer) Descriptor() ([]byte, []int)")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#func-parsedcelldatabuffer-getfunctions"},"func (x ","*","ParsedCellDataBuffer) GetFunctions() []string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#func-parsedcelldatabuffer-getmodules"},"func (x ","*","ParsedCellDataBuffer) GetModules() []string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#func-parsedcelldatabuffer-getsyntaxerrors"},"func (x ","*","ParsedCellDataBuffer) GetSyntaxErrors() []bool")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#func-parsedcelldatabuffer-protomessage"},"func (","*","ParsedCellDataBuffer) ProtoMessage()")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#func-parsedcelldatabuffer-protoreflect"},"func (x ","*","ParsedCellDataBuffer) ProtoReflect() protoreflect.Message")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#func-parsedcelldatabuffer-reset"},"func (x ","*","ParsedCellDataBuffer) Reset()")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#func-parsedcelldatabuffer-string"},"func (x ","*","ParsedCellDataBuffer) String() string")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#type-parsednotebookdatabuffer"},"type ParsedNotebookDataBuffer"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#func-parsednotebookdatabuffer-descriptor"},"func (","*","ParsedNotebookDataBuffer) Descriptor() ([]byte, []int)")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#func-parsednotebookdatabuffer-getcelldata"},"func (x ",(0,l.kt)("em",{parentName:"a"},"ParsedNotebookDataBuffer) GetCelldata() []"),"ParsedCellDataBuffer")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#func-parsednotebookdatabuffer-protomessage"},"func (","*","ParsedNotebookDataBuffer) ProtoMessage()")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#func-parsednotebookdatabuffer-protoreflect"},"func (x ","*","ParsedNotebookDataBuffer) ProtoReflect() protoreflect.Message")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#func-parsednotebookdatabuffer-reset"},"func (x ","*","ParsedNotebookDataBuffer) Reset()")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#func-parsednotebookdatabuffer-string"},"func (x ","*","ParsedNotebookDataBuffer) String() string")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#type-question"},"type Question"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#func-parsequestion"},"func ParseQuestion(input gqlmodels.QuestionInput) (Question, error)")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#type-rulestype"},"type RulesType")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#type-sqlquestion"},"type SQLQuestion")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#type-sqlsession"},"type SQLSession")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#type-sqlstudent"},"type SQLStudent")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#type-sqltest"},"type SQLTest")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#type-status"},"type Status")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#type-student"},"type Student"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#func-newstudent"},"func NewStudent(generator namegenerator.Generator) Student")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#type-studentlist"},"type StudentList"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#func-newstudentlist"},"func NewStudentList(size int) StudentList")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#func-studentlist-tocsvstring"},"func (s StudentList) ToCSVString() (string, error)")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#type-triggerstatus"},"type TriggerStatus"))),(0,l.kt)("h2",{id:"variables"},"Variables"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},"var File_protobuf_notebook_proto protoreflect.FileDescriptor\n")),(0,l.kt)("h2",{id:"type-action"},"type ",(0,l.kt)("a",{parentName:"h2",href:"https://github.com/ECA-Learning/ECAL-Proxy/blob/golang/alpha/pkg/models/actions.go#L15-L21"},"Action")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},'type Action struct {\n    ID       int        `yaml:"id"       json:"id"`\n    Dialogue string     `yaml:"dialogue" json:"dialogue"`\n    Data     string     `yaml:"data"     json:"data"`\n    PyCode   string     `yaml:"pyCode"   json:"pyCode"`\n    Type     ActionType `yaml:"type"     json:"type"`\n}\n')),(0,l.kt)("h3",{id:"func-createactions"},"func ",(0,l.kt)("a",{parentName:"h3",href:"https://github.com/ECA-Learning/ECAL-Proxy/blob/golang/alpha/pkg/models/actions.go#L32"},"CreateActions")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},"func CreateActions(upload graphql.Upload) []Action\n")),(0,l.kt)("h3",{id:"func-action-geturl"},"func ","(","Action",")"," ",(0,l.kt)("a",{parentName:"h3",href:"https://github.com/ECA-Learning/ECAL-Proxy/blob/golang/alpha/pkg/models/actions.go#L36"},"GetURL")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},"func (a Action) GetURL() url.URL\n")),(0,l.kt)("h2",{id:"type-actiontype"},"type ",(0,l.kt)("a",{parentName:"h2",href:"https://github.com/ECA-Learning/ECAL-Proxy/blob/golang/alpha/pkg/models/actions.go#L8"},"ActionType")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},"type ActionType string\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},'const (\n    MotivationalAction ActionType = "motivational"\n    EmotionalAction    ActionType = "emotional"\n)\n')),(0,l.kt)("h2",{id:"type-actions"},"type ",(0,l.kt)("a",{parentName:"h2",href:"https://github.com/ECA-Learning/ECAL-Proxy/blob/golang/alpha/pkg/models/actions.go#L23-L30"},"Actions")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},'type Actions struct {\n    Responsiveness []Action `json:"Responsiveness"`\n    Stuck          []Action `json:"Stuck"`\n    Error          []Action `json:"Error"`\n    ModuleUsage    []Action `json:"ModuleUsage"`\n    FunctionUsage  []Action `json:"FunctionUsage"`\n    Passive        []Action `json:"Passive"`\n}\n')),(0,l.kt)("h2",{id:"type-celldata"},"type ",(0,l.kt)("a",{parentName:"h2",href:"https://github.com/ECA-Learning/ECAL-Proxy/blob/golang/alpha/pkg/models/metrics.go#L24-L35"},"CellData")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},'type CellData struct {\n    Status    string `json:"status"`\n    Timestamp int64  `json:"timestamp"`\n    UserTz    int    `json:"user_tz"`\n    Elapsed   int    `json:"elapsed"`\n    User      struct {\n        DisplayName string `json:"displayName"`\n        PhotoURL    string `json:"photoUrl"`\n        UserID      string `json:"userId"`\n    }   `json:"user"`\n    ExecutionCount int `json:"execution_count"`\n}\n')),(0,l.kt)("h2",{id:"type-celldatabuffer"},"type ",(0,l.kt)("a",{parentName:"h2",href:"https://github.com/ECA-Learning/ECAL-Proxy/blob/golang/alpha/pkg/models/notebook.pb.go#L23-L30"},"CellDataBuffer")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},'type CellDataBuffer struct {\n    Input  string `protobuf:"bytes,1,opt,name=input,proto3" json:"input,omitempty"`\n    Output string `protobuf:"bytes,2,opt,name=output,proto3" json:"output,omitempty"`\n    // contains filtered or unexported fields\n}\n')),(0,l.kt)("h3",{id:"func-celldatabuffer-descriptor"},"func ","(","*","CellDataBuffer",")"," ",(0,l.kt)("a",{parentName:"h3",href:"https://github.com/ECA-Learning/ECAL-Proxy/blob/golang/alpha/pkg/models/notebook.pb.go#L60"},"Descriptor")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},"func (*CellDataBuffer) Descriptor() ([]byte, []int)\n")),(0,l.kt)("p",null,"Deprecated: Use CellDataBuffer.ProtoReflect.Descriptor instead."),(0,l.kt)("h3",{id:"func-celldatabuffer-getinput"},"func ","(","*","CellDataBuffer",")"," ",(0,l.kt)("a",{parentName:"h3",href:"https://github.com/ECA-Learning/ECAL-Proxy/blob/golang/alpha/pkg/models/notebook.pb.go#L64"},"GetInput")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},"func (x *CellDataBuffer) GetInput() string\n")),(0,l.kt)("h3",{id:"func-celldatabuffer-getoutput"},"func ","(","*","CellDataBuffer",")"," ",(0,l.kt)("a",{parentName:"h3",href:"https://github.com/ECA-Learning/ECAL-Proxy/blob/golang/alpha/pkg/models/notebook.pb.go#L71"},"GetOutput")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},"func (x *CellDataBuffer) GetOutput() string\n")),(0,l.kt)("h3",{id:"func-celldatabuffer-protomessage"},"func ","(","*","CellDataBuffer",")"," ",(0,l.kt)("a",{parentName:"h3",href:"https://github.com/ECA-Learning/ECAL-Proxy/blob/golang/alpha/pkg/models/notebook.pb.go#L45"},"ProtoMessage")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},"func (*CellDataBuffer) ProtoMessage()\n")),(0,l.kt)("h3",{id:"func-celldatabuffer-protoreflect"},"func ","(","*","CellDataBuffer",")"," ",(0,l.kt)("a",{parentName:"h3",href:"https://github.com/ECA-Learning/ECAL-Proxy/blob/golang/alpha/pkg/models/notebook.pb.go#L47"},"ProtoReflect")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},"func (x *CellDataBuffer) ProtoReflect() protoreflect.Message\n")),(0,l.kt)("h3",{id:"func-celldatabuffer-reset"},"func ","(","*","CellDataBuffer",")"," ",(0,l.kt)("a",{parentName:"h3",href:"https://github.com/ECA-Learning/ECAL-Proxy/blob/golang/alpha/pkg/models/notebook.pb.go#L32"},"Reset")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},"func (x *CellDataBuffer) Reset()\n")),(0,l.kt)("h3",{id:"func-celldatabuffer-string"},"func ","(","*","CellDataBuffer",")"," ",(0,l.kt)("a",{parentName:"h3",href:"https://github.com/ECA-Learning/ECAL-Proxy/blob/golang/alpha/pkg/models/notebook.pb.go#L41"},"String")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},"func (x *CellDataBuffer) String() string\n")),(0,l.kt)("h2",{id:"type-metrics"},"type ",(0,l.kt)("a",{parentName:"h2",href:"https://github.com/ECA-Learning/ECAL-Proxy/blob/golang/alpha/pkg/models/metrics.go#L3-L22"},"Metrics")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},'type Metrics struct {\n    CellData []struct {\n        Index           int      `json:"index"`\n        Input           string   `json:"input"`\n        Output          string   `json:"output"`\n        IsExecuted      bool     `json:"isExecuted"`\n        Info            CellData `json:"info"`\n        HasError        bool     `json:"hasError"`\n        Busy            bool     `json:"busy"`\n        ParsedModules   []string `json:"parsed_modules"`\n        ParsedFunctions []struct {\n            Module string `json:"module"`\n            Name   string `json:"name"`\n        }   `json:"parsed_functions"`\n    }   `json:"celldata"`\n    LastKeyPressTime  int    `json:"lastkeypressTime"`\n    WindowURL         string `json:"windowURL"`\n    LastMouseMoveTime int    `json:"lastmousemoveTime"`\n    Timestamp         int    `json:"timestamp"`\n}\n')),(0,l.kt)("h2",{id:"type-model"},"type ",(0,l.kt)("a",{parentName:"h2",href:"https://github.com/ECA-Learning/ECAL-Proxy/blob/golang/alpha/pkg/models/sql_models.go#L9-L13"},"Model")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},'type Model struct {\n    CreatedAt time.Time\n    UpdatedAt time.Time\n    DeletedAt gorm.DeletedAt `gorm:"index"`\n}\n')),(0,l.kt)("h2",{id:"type-notebookdatabuffer"},"type ",(0,l.kt)("a",{parentName:"h2",href:"https://github.com/ECA-Learning/ECAL-Proxy/blob/golang/alpha/pkg/models/notebook.pb.go#L78-L84"},"NotebookDataBuffer")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},'type NotebookDataBuffer struct {\n    Celldata []*CellDataBuffer `protobuf:"bytes,1,rep,name=celldata,proto3" json:"celldata,omitempty"`\n    // contains filtered or unexported fields\n}\n')),(0,l.kt)("h3",{id:"func-notebookdatabuffer-descriptor"},"func ","(","*","NotebookDataBuffer",")"," ",(0,l.kt)("a",{parentName:"h3",href:"https://github.com/ECA-Learning/ECAL-Proxy/blob/golang/alpha/pkg/models/notebook.pb.go#L114"},"Descriptor")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},"func (*NotebookDataBuffer) Descriptor() ([]byte, []int)\n")),(0,l.kt)("p",null,"Deprecated: Use NotebookDataBuffer.ProtoReflect.Descriptor instead."),(0,l.kt)("h3",{id:"func-notebookdatabuffer-getcelldata"},"func ","(","*","NotebookDataBuffer",")"," ",(0,l.kt)("a",{parentName:"h3",href:"https://github.com/ECA-Learning/ECAL-Proxy/blob/golang/alpha/pkg/models/notebook.pb.go#L118"},"GetCelldata")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},"func (x *NotebookDataBuffer) GetCelldata() []*CellDataBuffer\n")),(0,l.kt)("h3",{id:"func-notebookdatabuffer-protomessage"},"func ","(","*","NotebookDataBuffer",")"," ",(0,l.kt)("a",{parentName:"h3",href:"https://github.com/ECA-Learning/ECAL-Proxy/blob/golang/alpha/pkg/models/notebook.pb.go#L99"},"ProtoMessage")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},"func (*NotebookDataBuffer) ProtoMessage()\n")),(0,l.kt)("h3",{id:"func-notebookdatabuffer-protoreflect"},"func ","(","*","NotebookDataBuffer",")"," ",(0,l.kt)("a",{parentName:"h3",href:"https://github.com/ECA-Learning/ECAL-Proxy/blob/golang/alpha/pkg/models/notebook.pb.go#L101"},"ProtoReflect")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},"func (x *NotebookDataBuffer) ProtoReflect() protoreflect.Message\n")),(0,l.kt)("h3",{id:"func-notebookdatabuffer-reset"},"func ","(","*","NotebookDataBuffer",")"," ",(0,l.kt)("a",{parentName:"h3",href:"https://github.com/ECA-Learning/ECAL-Proxy/blob/golang/alpha/pkg/models/notebook.pb.go#L86"},"Reset")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},"func (x *NotebookDataBuffer) Reset()\n")),(0,l.kt)("h3",{id:"func-notebookdatabuffer-string"},"func ","(","*","NotebookDataBuffer",")"," ",(0,l.kt)("a",{parentName:"h3",href:"https://github.com/ECA-Learning/ECAL-Proxy/blob/golang/alpha/pkg/models/notebook.pb.go#L95"},"String")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},"func (x *NotebookDataBuffer) String() string\n")),(0,l.kt)("h2",{id:"type-parsedcelldatabuffer"},"type ",(0,l.kt)("a",{parentName:"h2",href:"https://github.com/ECA-Learning/ECAL-Proxy/blob/golang/alpha/pkg/models/notebook.pb.go#L172-L180"},"ParsedCellDataBuffer")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},'type ParsedCellDataBuffer struct {\n    Modules      []string `protobuf:"bytes,1,rep,name=modules,proto3" json:"modules,omitempty"`\n    Functions    []string `protobuf:"bytes,2,rep,name=functions,proto3" json:"functions,omitempty"`\n    SyntaxErrors []bool   `protobuf:"varint,3,rep,packed,name=syntaxErrors,proto3" json:"syntaxErrors,omitempty"`\n    // contains filtered or unexported fields\n}\n')),(0,l.kt)("h3",{id:"func-parsedcelldatabuffer-descriptor"},"func ","(","*","ParsedCellDataBuffer",")"," ",(0,l.kt)("a",{parentName:"h3",href:"https://github.com/ECA-Learning/ECAL-Proxy/blob/golang/alpha/pkg/models/notebook.pb.go#L210"},"Descriptor")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},"func (*ParsedCellDataBuffer) Descriptor() ([]byte, []int)\n")),(0,l.kt)("p",null,"Deprecated: Use ParsedCellDataBuffer.ProtoReflect.Descriptor instead."),(0,l.kt)("h3",{id:"func-parsedcelldatabuffer-getfunctions"},"func ","(","*","ParsedCellDataBuffer",")"," ",(0,l.kt)("a",{parentName:"h3",href:"https://github.com/ECA-Learning/ECAL-Proxy/blob/golang/alpha/pkg/models/notebook.pb.go#L221"},"GetFunctions")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},"func (x *ParsedCellDataBuffer) GetFunctions() []string\n")),(0,l.kt)("h3",{id:"func-parsedcelldatabuffer-getmodules"},"func ","(","*","ParsedCellDataBuffer",")"," ",(0,l.kt)("a",{parentName:"h3",href:"https://github.com/ECA-Learning/ECAL-Proxy/blob/golang/alpha/pkg/models/notebook.pb.go#L214"},"GetModules")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},"func (x *ParsedCellDataBuffer) GetModules() []string\n")),(0,l.kt)("h3",{id:"func-parsedcelldatabuffer-getsyntaxerrors"},"func ","(","*","ParsedCellDataBuffer",")"," ",(0,l.kt)("a",{parentName:"h3",href:"https://github.com/ECA-Learning/ECAL-Proxy/blob/golang/alpha/pkg/models/notebook.pb.go#L228"},"GetSyntaxErrors")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},"func (x *ParsedCellDataBuffer) GetSyntaxErrors() []bool\n")),(0,l.kt)("h3",{id:"func-parsedcelldatabuffer-protomessage"},"func ","(","*","ParsedCellDataBuffer",")"," ",(0,l.kt)("a",{parentName:"h3",href:"https://github.com/ECA-Learning/ECAL-Proxy/blob/golang/alpha/pkg/models/notebook.pb.go#L195"},"ProtoMessage")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},"func (*ParsedCellDataBuffer) ProtoMessage()\n")),(0,l.kt)("h3",{id:"func-parsedcelldatabuffer-protoreflect"},"func ","(","*","ParsedCellDataBuffer",")"," ",(0,l.kt)("a",{parentName:"h3",href:"https://github.com/ECA-Learning/ECAL-Proxy/blob/golang/alpha/pkg/models/notebook.pb.go#L197"},"ProtoReflect")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},"func (x *ParsedCellDataBuffer) ProtoReflect() protoreflect.Message\n")),(0,l.kt)("h3",{id:"func-parsedcelldatabuffer-reset"},"func ","(","*","ParsedCellDataBuffer",")"," ",(0,l.kt)("a",{parentName:"h3",href:"https://github.com/ECA-Learning/ECAL-Proxy/blob/golang/alpha/pkg/models/notebook.pb.go#L182"},"Reset")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},"func (x *ParsedCellDataBuffer) Reset()\n")),(0,l.kt)("h3",{id:"func-parsedcelldatabuffer-string"},"func ","(","*","ParsedCellDataBuffer",")"," ",(0,l.kt)("a",{parentName:"h3",href:"https://github.com/ECA-Learning/ECAL-Proxy/blob/golang/alpha/pkg/models/notebook.pb.go#L191"},"String")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},"func (x *ParsedCellDataBuffer) String() string\n")),(0,l.kt)("h2",{id:"type-parsednotebookdatabuffer"},"type ",(0,l.kt)("a",{parentName:"h2",href:"https://github.com/ECA-Learning/ECAL-Proxy/blob/golang/alpha/pkg/models/notebook.pb.go#L125-L131"},"ParsedNotebookDataBuffer")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},'type ParsedNotebookDataBuffer struct {\n    Celldata []*ParsedCellDataBuffer `protobuf:"bytes,1,rep,name=celldata,proto3" json:"celldata,omitempty"`\n    // contains filtered or unexported fields\n}\n')),(0,l.kt)("h3",{id:"func-parsednotebookdatabuffer-descriptor"},"func ","(","*","ParsedNotebookDataBuffer",")"," ",(0,l.kt)("a",{parentName:"h3",href:"https://github.com/ECA-Learning/ECAL-Proxy/blob/golang/alpha/pkg/models/notebook.pb.go#L161"},"Descriptor")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},"func (*ParsedNotebookDataBuffer) Descriptor() ([]byte, []int)\n")),(0,l.kt)("p",null,"Deprecated: Use ParsedNotebookDataBuffer.ProtoReflect.Descriptor instead."),(0,l.kt)("h3",{id:"func-parsednotebookdatabuffer-getcelldata"},"func ","(","*","ParsedNotebookDataBuffer",")"," ",(0,l.kt)("a",{parentName:"h3",href:"https://github.com/ECA-Learning/ECAL-Proxy/blob/golang/alpha/pkg/models/notebook.pb.go#L165"},"GetCelldata")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},"func (x *ParsedNotebookDataBuffer) GetCelldata() []*ParsedCellDataBuffer\n")),(0,l.kt)("h3",{id:"func-parsednotebookdatabuffer-protomessage"},"func ","(","*","ParsedNotebookDataBuffer",")"," ",(0,l.kt)("a",{parentName:"h3",href:"https://github.com/ECA-Learning/ECAL-Proxy/blob/golang/alpha/pkg/models/notebook.pb.go#L146"},"ProtoMessage")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},"func (*ParsedNotebookDataBuffer) ProtoMessage()\n")),(0,l.kt)("h3",{id:"func-parsednotebookdatabuffer-protoreflect"},"func ","(","*","ParsedNotebookDataBuffer",")"," ",(0,l.kt)("a",{parentName:"h3",href:"https://github.com/ECA-Learning/ECAL-Proxy/blob/golang/alpha/pkg/models/notebook.pb.go#L148"},"ProtoReflect")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},"func (x *ParsedNotebookDataBuffer) ProtoReflect() protoreflect.Message\n")),(0,l.kt)("h3",{id:"func-parsednotebookdatabuffer-reset"},"func ","(","*","ParsedNotebookDataBuffer",")"," ",(0,l.kt)("a",{parentName:"h3",href:"https://github.com/ECA-Learning/ECAL-Proxy/blob/golang/alpha/pkg/models/notebook.pb.go#L133"},"Reset")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},"func (x *ParsedNotebookDataBuffer) Reset()\n")),(0,l.kt)("h3",{id:"func-parsednotebookdatabuffer-string"},"func ","(","*","ParsedNotebookDataBuffer",")"," ",(0,l.kt)("a",{parentName:"h3",href:"https://github.com/ECA-Learning/ECAL-Proxy/blob/golang/alpha/pkg/models/notebook.pb.go#L142"},"String")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},"func (x *ParsedNotebookDataBuffer) String() string\n")),(0,l.kt)("h2",{id:"type-question"},"type ",(0,l.kt)("a",{parentName:"h2",href:"https://github.com/ECA-Learning/ECAL-Proxy/blob/golang/alpha/pkg/models/question.go#L9-L14"},"Question")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},'type Question struct {\n    ID           string    `yaml:"ID"`\n    Title        string    `yaml:"title"`\n    Actions      Actions   `yaml:"actions"`\n    NotebookURLS []url.URL `yaml:"url"`\n}\n')),(0,l.kt)("h3",{id:"func-parsequestion"},"func ",(0,l.kt)("a",{parentName:"h3",href:"https://github.com/ECA-Learning/ECAL-Proxy/blob/golang/alpha/pkg/models/question.go#L16"},"ParseQuestion")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},"func ParseQuestion(input gqlmodels.QuestionInput) (Question, error)\n")),(0,l.kt)("h2",{id:"type-rulestype"},"type ",(0,l.kt)("a",{parentName:"h2",href:"https://github.com/ECA-Learning/ECAL-Proxy/blob/golang/alpha/pkg/models/rules.go#L7-L79"},"RulesType")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},'type RulesType struct {\n    Responsiveness struct {\n        Frequency  string `yaml:"frequency"`\n        Indicators struct {\n            NoMouseMovement struct {\n                Enabled   bool          `yaml:"enabled"`\n                Threshold time.Duration `yaml:"threshold"`\n            }   `yaml:"no_mouse_movement"`\n            NoKeyboardActivity struct {\n                Enabled   bool          `yaml:"enabled"`\n                Threshold time.Duration `yaml:"threshold"`\n            }   `yaml:"no_keyboard_activity"`\n            NoCellExecution struct {\n                Enabled   bool          `yaml:"enabled"`\n                Threshold time.Duration `yaml:"threshold"`\n            }   `yaml:"no_cell_execution"`\n        }   `yaml:"indicators"`\n        Expr string `yaml:"expr"`\n    }   `yaml:"responsiveness"`\n    Stuck struct {\n        Frequency  string `yaml:"frequency"`\n        Indicators struct {\n            HighErrorFrequency struct {\n                Enabled                bool        `yaml:"enabled"`\n                MinNormalizedFrequency interface{} `yaml:"min_normalized_frequency"`\n                Time                   interface{} `yaml:"time"`\n                EarlyTrigger           interface{} `yaml:"early_trigger"`\n            }   `yaml:"high_error_frequency"`\n            TimeElapsedSinceLastExecutionWasAnError struct {\n                Enabled        bool        `yaml:"enabled"`\n                Threshold      interface{} `yaml:"threshold"`\n                ResetThreshold interface{} `yaml:"reset_threshold"`\n            }   `yaml:"time_elapsed_since_last_execution_was_an_error"`\n        }   `yaml:"indicators"`\n        Expr    string `yaml:"expr"`\n        Actions []int  `yaml:"actions"`\n    }   `yaml:"stuck"`\n    Error struct {\n        Indicators struct {\n            JupyterOutput struct {\n                Enabled   bool          `yaml:"enabled"`\n                Threshold time.Duration `yaml:"threshold"`\n            }   `yaml:"jupyter_output"`\n            SyntaxChecker struct {\n                Threshold time.Duration `yaml:"threshold"`\n                Enabled   bool          `yaml:"enabled"`\n            }   `yaml:"syntax_checker"`\n        }   `yaml:"indicators"`\n        Expr    string `yaml:"expr"`\n        Actions []int  `yaml:"actions"`\n    }   `yaml:"error"`\n    ModuleUsage struct {\n        Modules []struct {\n            Name      string        `yaml:"name"`\n            Threshold time.Duration `yaml:"threshold"`\n            Actions   []int         `yaml:"actions"`\n        }   `yaml:"modules"`\n        Expr string `yaml:"expr"`\n    }   `yaml:"module_usage"`\n    FunctionUsage struct {\n        Functions []struct {\n            Name      string        `yaml:"name"`\n            Module    string        `yaml:"module"`\n            Threshold time.Duration `yaml:"threshold"`\n            Actions   []int         `yaml:"actions"`\n        }   `yaml:"functions"`\n        Expr string `yaml:"expr"`\n    }   `yaml:"function_usage"`\n    Passive []struct {\n        Action    int           `yaml:"action"`\n        Threshold time.Duration `yaml:"threshold"`\n    }   `yaml:"passive"`\n}\n')),(0,l.kt)("h2",{id:"type-sqlquestion"},"type ",(0,l.kt)("a",{parentName:"h2",href:"https://github.com/ECA-Learning/ECAL-Proxy/blob/golang/alpha/pkg/models/sql_models.go#L25-L31"},"SQLQuestion")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},'type SQLQuestion struct {\n    Model\n    ID      string `gorm:"primaryKey"`\n    Title   string\n    Details datatypes.JSON\n    Tests   []SQLTest `gorm:"foreignKey:ID"`\n}\n')),(0,l.kt)("h2",{id:"type-sqlsession"},"type ",(0,l.kt)("a",{parentName:"h2",href:"https://github.com/ECA-Learning/ECAL-Proxy/blob/golang/alpha/pkg/models/sql_models.go#L41-L45"},"SQLSession")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},'type SQLSession struct {\n    Model\n    ID      string `gorm:"primaryKey"`\n    Details datatypes.JSON\n}\n')),(0,l.kt)("h2",{id:"type-sqlstudent"},"type ",(0,l.kt)("a",{parentName:"h2",href:"https://github.com/ECA-Learning/ECAL-Proxy/blob/golang/alpha/pkg/models/sql_models.go#L33-L39"},"SQLStudent")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},'type SQLStudent struct {\n    Model\n    ID       string `gorm:"primaryKey"`\n    UserName string\n    Password string\n    Sessions []SQLSession `gorm:"foreignKey:ID"`\n}\n')),(0,l.kt)("h2",{id:"type-sqltest"},"type ",(0,l.kt)("a",{parentName:"h2",href:"https://github.com/ECA-Learning/ECAL-Proxy/blob/golang/alpha/pkg/models/sql_models.go#L15-L23"},"SQLTest")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},'type SQLTest struct {\n    Model\n    ID        string `gorm:"primaryKey"`\n    Title     string\n    StartTime int\n    EndTime   int\n    Students  []SQLStudent `gorm:"foreignKey:ID"`\n    Details   datatypes.JSON\n}\n')),(0,l.kt)("h2",{id:"type-status"},"type ",(0,l.kt)("a",{parentName:"h2",href:"https://github.com/ECA-Learning/ECAL-Proxy/blob/golang/alpha/pkg/models/status.go#L7-L53"},"Status")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},'type Status struct {\n    Responsiveness struct {\n        Indicators struct {\n            NoMouseMovement struct {\n                TimeElapsed int64 `json:"since"`\n            }   `json:"no_mouse_movement"`\n            NoKeyboardActivity struct {\n                TimeElapsed int `json:"since"`\n            }   `json:"no_keyboard_activity"`\n            NoCellExecution struct {\n                TimeElapsed int64 `json:"since"`\n            }   `json:"no_cell_execution"`\n        }   `json:"indicators"`\n        Expr bool `json:"expr"`\n    }   `json:"responsiveness"`\n    Stuck struct {\n        Frequency  string `json:"frequency"`\n        Indicators struct {\n            CellExecutions struct {\n                TimeElapsed int `json:"since"`\n            }   `json:"cell_executions"`\n            ErrorsOccured struct {\n                Type        string `json:"type"`\n                Enabled     bool   `json:"enabled"`\n                TimeElapsed int    `json:"since"`\n            }   `json:"errors_occured"`\n        }   `json:"indicators"`\n    }   `json:"stuck"`\n    Error struct {\n        Indicators struct {\n            JupyterOutput struct {\n                TimeElapsed int `json:"since"`\n            }   `json:"jupyter_output"`\n            SyntaxChecker struct {\n                Enabled int `json:"enabled"`\n            }   `json:"syntax_checker"`\n        } `json:"indicators"`\n    }   `json:"error"`\n    ModuleUsage struct {\n        Modules mathx.Set[string] `json:"modules"`\n        Expr    string            `json:"expr"`\n    }   `json:"module_usage"`\n    FunctionUsage struct {\n        Functions mathx.Set[string] `json:"functions"`\n        Expr      string            `json:"expr"`\n    }   `json:"function_usage"`\n}\n')),(0,l.kt)("h2",{id:"type-student"},"type ",(0,l.kt)("a",{parentName:"h2",href:"https://github.com/ECA-Learning/ECAL-Proxy/blob/golang/alpha/pkg/models/student.go#L13-L17"},"Student")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},'type Student struct {\n    ID       string `json:"ID" gorm:"primaryKey"`\n    UserName string `json:"userName"`\n    Password string `json:"password"`\n}\n')),(0,l.kt)("h3",{id:"func-newstudent"},"func ",(0,l.kt)("a",{parentName:"h3",href:"https://github.com/ECA-Learning/ECAL-Proxy/blob/golang/alpha/pkg/models/student.go#L22"},"NewStudent")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},"func NewStudent(generator namegenerator.Generator) Student\n")),(0,l.kt)("p",null,"NewStudent Generates a new student with random id and password."),(0,l.kt)("h2",{id:"type-studentlist"},"type ",(0,l.kt)("a",{parentName:"h2",href:"https://github.com/ECA-Learning/ECAL-Proxy/blob/golang/alpha/pkg/models/student.go#L19"},"StudentList")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},"type StudentList []Student\n")),(0,l.kt)("h3",{id:"func-newstudentlist"},"func ",(0,l.kt)("a",{parentName:"h3",href:"https://github.com/ECA-Learning/ECAL-Proxy/blob/golang/alpha/pkg/models/student.go#L30"},"NewStudentList")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},"func NewStudentList(size int) StudentList\n")),(0,l.kt)("p",null,"NewStudentList Given a length, generate multiple student id"),(0,l.kt)("h3",{id:"func-studentlist-tocsvstring"},"func ","(","StudentList",")"," ",(0,l.kt)("a",{parentName:"h3",href:"https://github.com/ECA-Learning/ECAL-Proxy/blob/golang/alpha/pkg/models/student.go#L41"},"ToCSVString")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},"func (s StudentList) ToCSVString() (string, error)\n")),(0,l.kt)("p",null,"ToCSVString Converts the Student List into a comma delimited CSV string."),(0,l.kt)("h2",{id:"type-triggerstatus"},"type ",(0,l.kt)("a",{parentName:"h2",href:"https://github.com/ECA-Learning/ECAL-Proxy/blob/golang/alpha/pkg/models/status.go#L55-L76"},"TriggerStatus")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},'type TriggerStatus struct {\n    Responsiveness bool\n    Stuck          bool\n    Error          bool\n    ModuleUsage    struct {\n        Modules []struct {\n            Name        string `json:"name"`\n            TimeElapsed string `json:"since"`\n            Actions     []int  `json:"actions"`\n        }   `json:"modules"`\n        Expr string `json:"expr"`\n    }   `json:"module_usage"`\n    FunctionUsage struct {\n        Functions []struct {\n            Name        string `json:"name"`\n            Module      string `json:"module"`\n            TimeElapsed string `json:"since"`\n            Actions     []int  `json:"actions"`\n        }   `json:"functions"`\n        Expr string `json:"expr"`\n    }   `json:"function_usage"`\n}\n')),(0,l.kt)("h1",{id:"parser"},"parser"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},'import "github.com/ECA-Learning/ECAL-Proxy/pkg/parser"\n')),(0,l.kt)("h2",{id:"index-4"},"Index"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#func-studentlist"},"func StudentList(csv graphql.Upload) ([]string, error)"))),(0,l.kt)("h2",{id:"func-studentlist"},"func ",(0,l.kt)("a",{parentName:"h2",href:"https://github.com/ECA-Learning/ECAL-Proxy/blob/golang/alpha/pkg/parser/student_list.go#L9"},"StudentList")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},"func StudentList(csv graphql.Upload) ([]string, error)\n")),(0,l.kt)("h1",{id:"quiz"},"quiz"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},'import "github.com/ECA-Learning/ECAL-Proxy/pkg/quiz"\n')),(0,l.kt)("h2",{id:"index-5"},"Index"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#type-action"},"type Action")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#type-actiontype"},"type ActionType")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#type-actions"},"type Actions")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#type-broker"},"type Broker")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#type-database"},"type Database")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#type-manager"},"type Manager"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#func-newmanager"},"func NewManager(broker ",(0,l.kt)("em",{parentName:"a"},"net.Broker) "),"Manager")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#func-manager-checkscaffoldingconfig"},"func (m ",(0,l.kt)("em",{parentName:"a"},"Manager) CheckScaffoldingConfig(c "),"fiber.Ctx) error")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#func-manager-fetchdata"},"func (m ",(0,l.kt)("em",{parentName:"a"},"Manager) FetchData(c "),"fiber.Ctx) error")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#func-manager-generatepins"},"func (m ","*","Manager) GeneratePins()")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#func-manager-getactivetests"},"func (m ",(0,l.kt)("em",{parentName:"a"},"Manager) GetActiveTests(c "),"fiber.Ctx) error")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#func-manager-getquestion"},"func (m ","*","Manager) GetQuestion(id string) (models.Question, error)")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#func-manager-getquestions"},"func (m ",(0,l.kt)("em",{parentName:"a"},"Manager) GetQuestions() ([]"),"gqlmodels.Question, error)")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#func-manager-login"},"func (m ",(0,l.kt)("em",{parentName:"a"},"Manager) Login(c "),"fiber.Ctx) error")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#func-manager-opentest"},"func (m ",(0,l.kt)("em",{parentName:"a"},"Manager) OpenTest(c "),"fiber.Ctx) error")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#func-manager-ssehandler"},"func (m ",(0,l.kt)("em",{parentName:"a"},"Manager) SSEHandler(writer http.ResponseWriter, request "),"http.Request)")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#func-manager-savequestion"},"func (m ","*","Manager) SaveQuestion(question gqlmodels.QuestionInput) error")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#func-manager-savetest"},"func (m ","*","Manager) SaveTest(data gqlmodels.TestDataInput, students []models.Student) error")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#func-manager-setuptestloop"},"func (m ","*","Manager) SetupTestLoop(database database.SQLClient)")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#func-manager-start"},"func (m ","*","Manager) Start()")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#func-manager-submit"},"func (m ",(0,l.kt)("em",{parentName:"a"},"Manager) Submit(c "),"fiber.Ctx) error")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#func-manager-updatemetrics"},"func (m ",(0,l.kt)("em",{parentName:"a"},"Manager) UpdateMetrics(c "),"fiber.Ctx) error")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#func-manager-verifysession"},"func (m ",(0,l.kt)("em",{parentName:"a"},"Manager) VerifySession(c "),"fiber.Ctx) error")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#type-scheduler"},"type Scheduler"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#func-scheduler-setupactionloop"},"func (scheduler ","*","Scheduler) SetupActionLoop(broker Broker, db Database, r gqlmodels.Rules, q models.Question, a models.Actions)")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#func-scheduler-setupjupyterheartbeat"},"func (scheduler ","*","Scheduler) SetupJupyterHeartbeat(broker Broker, tid string)")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#type-session"},"type Session"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#func-session-checkerror"},"func (s ","*","Session) CheckError(Rules gqlmodels.Rules) bool")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#func-session-checkresponsiveness"},"func (s Session) CheckResponsiveness(Rules gqlmodels.Rules) bool")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#func-session-gettriggers"},"func (s ","*","Session) GetTriggers(Rules gqlmodels.Rules, q models.Question) int")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#func-session-triggeraction"},"func (s ","*","Session) TriggerAction(a models.Action, broker Broker)")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#func-session-update"},"func (s ","*","Session) Update(m models.Metrics)")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#func-session-updateerror"},"func (s ","*","Session) UpdateError(m models.Metrics)")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#func-session-updatemoduleandfunctionusage"},"func (s ","*","Session) UpdateModuleAndFunctionUsage(m models.Metrics) error")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#func-session-updateresponsiveness"},"func (s ","*","Session) UpdateResponsiveness(m models.Metrics)")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#type-test"},"type Test"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#func-test-close"},"func (t ","*","Test) Close()")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#func-test-createsession"},"func (t ","*","Test) CreateSession(s Session)")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#func-test-serialize"},"func (t ","*","Test) Serialize() datatypes.JSON")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#func-test-setupmetricloop"},"func (t ","*","Test) SetupMetricLoop()")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#func-test-start"},"func (t ","*","Test) Start()")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#type-testscheduler"},"type TestScheduler"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#func-newtestscheduler"},"func NewTestScheduler() TestScheduler"))))),(0,l.kt)("h2",{id:"type-action-1"},"type ",(0,l.kt)("a",{parentName:"h2",href:"https://github.com/ECA-Learning/ECAL-Proxy/blob/golang/alpha/pkg/quiz/actions.go#L10-L16"},"Action")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},'type Action struct {\n    ID       int        `yaml:"id"       json:"id"`\n    Dialogue string     `yaml:"dialogue" json:"dialogue"`\n    Data     string     `yaml:"data"     json:"data"`\n    PyCode   string     `yaml:"pyCode"   json:"pyCode"`\n    Type     ActionType `yaml:"type"     json:"type"`\n}\n')),(0,l.kt)("h2",{id:"type-actiontype-1"},"type ",(0,l.kt)("a",{parentName:"h2",href:"https://github.com/ECA-Learning/ECAL-Proxy/blob/golang/alpha/pkg/quiz/actions.go#L3"},"ActionType")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},"type ActionType string\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},'const (\n    MotivationalAction ActionType = "motivational"\n    EmotionalAction    ActionType = "emotional"\n)\n')),(0,l.kt)("h2",{id:"type-actions-1"},"type ",(0,l.kt)("a",{parentName:"h2",href:"https://github.com/ECA-Learning/ECAL-Proxy/blob/golang/alpha/pkg/quiz/actions.go#L18-L25"},"Actions")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},'type Actions struct {\n    Responsiveness []Action `json:"Responsiveness"`\n    Stuck          []Action `json:"Stuck"`\n    Error          []Action `json:"Error"`\n    ModuleUsage    []Action `json:"ModuleUsage"`\n    FunctionUsage  []Action `json:"FunctionUsage"`\n    Passive        []Action `json:"Passive"`\n}\n')),(0,l.kt)("h2",{id:"type-broker"},"type ",(0,l.kt)("a",{parentName:"h2",href:"https://github.com/ECA-Learning/ECAL-Proxy/blob/golang/alpha/pkg/quiz/session_scheduler.go#L22-L25"},"Broker")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},"type Broker interface {\n    Broadcast(net.Event)\n    Send(string, net.Event) error\n}\n")),(0,l.kt)("h2",{id:"type-database"},"type ",(0,l.kt)("a",{parentName:"h2",href:"https://github.com/ECA-Learning/ECAL-Proxy/blob/golang/alpha/pkg/quiz/session_scheduler.go#L27-L30"},"Database")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},"type Database interface {\n    Iterate(func(k, v []byte, txn *badger.Txn) error) error\n    Save(key string, value interface{}) error\n}\n")),(0,l.kt)("h2",{id:"type-manager"},"type ",(0,l.kt)("a",{parentName:"h2",href:"https://github.com/ECA-Learning/ECAL-Proxy/blob/golang/alpha/pkg/quiz/manager.go#L10-L15"},"Manager")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},"type Manager struct {\n    ActiveTests map[string]*Test\n    Store       database.SQLClient\n    Scheduler   TestScheduler\n    Broker      *net.Broker\n}\n")),(0,l.kt)("h3",{id:"func-newmanager"},"func ",(0,l.kt)("a",{parentName:"h3",href:"https://github.com/ECA-Learning/ECAL-Proxy/blob/golang/alpha/pkg/quiz/manager.go#L17"},"NewManager")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},"func NewManager(broker *net.Broker) *Manager\n")),(0,l.kt)("h3",{id:"func-manager-checkscaffoldingconfig"},"func ","(","*","Manager",")"," ",(0,l.kt)("a",{parentName:"h3",href:"https://github.com/ECA-Learning/ECAL-Proxy/blob/golang/alpha/pkg/quiz/manager_http.go#L106"},"CheckScaffoldingConfig")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},"func (m *Manager) CheckScaffoldingConfig(c *fiber.Ctx) error\n")),(0,l.kt)("h3",{id:"func-manager-fetchdata"},"func ","(","*","Manager",")"," ",(0,l.kt)("a",{parentName:"h3",href:"https://github.com/ECA-Learning/ECAL-Proxy/blob/golang/alpha/pkg/quiz/manager_http.go#L51"},"FetchData")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},"func (m *Manager) FetchData(c *fiber.Ctx) error\n")),(0,l.kt)("h3",{id:"func-manager-generatepins"},"func ","(","*","Manager",")"," ",(0,l.kt)("a",{parentName:"h3",href:"https://github.com/ECA-Learning/ECAL-Proxy/blob/golang/alpha/pkg/quiz/auth.go#L3"},"GeneratePins")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},"func (m *Manager) GeneratePins()\n")),(0,l.kt)("h3",{id:"func-manager-getactivetests"},"func ","(","*","Manager",")"," ",(0,l.kt)("a",{parentName:"h3",href:"https://github.com/ECA-Learning/ECAL-Proxy/blob/golang/alpha/pkg/quiz/manager_http.go#L123"},"GetActiveTests")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},"func (m *Manager) GetActiveTests(c *fiber.Ctx) error\n")),(0,l.kt)("h3",{id:"func-manager-getquestion"},"func ","(","*","Manager",")"," ",(0,l.kt)("a",{parentName:"h3",href:"https://github.com/ECA-Learning/ECAL-Proxy/blob/golang/alpha/pkg/quiz/database.go#L15"},"GetQuestion")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},"func (m *Manager) GetQuestion(id string) (models.Question, error)\n")),(0,l.kt)("h3",{id:"func-manager-getquestions"},"func ","(","*","Manager",")"," ",(0,l.kt)("a",{parentName:"h3",href:"https://github.com/ECA-Learning/ECAL-Proxy/blob/golang/alpha/pkg/quiz/database.go#L23"},"GetQuestions")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},"func (m *Manager) GetQuestions() ([]*gqlmodels.Question, error)\n")),(0,l.kt)("h3",{id:"func-manager-login"},"func ","(","*","Manager",")"," ",(0,l.kt)("a",{parentName:"h3",href:"https://github.com/ECA-Learning/ECAL-Proxy/blob/golang/alpha/pkg/quiz/manager_http.go#L92"},"Login")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},"func (m *Manager) Login(c *fiber.Ctx) error\n")),(0,l.kt)("h3",{id:"func-manager-opentest"},"func ","(","*","Manager",")"," ",(0,l.kt)("a",{parentName:"h3",href:"https://github.com/ECA-Learning/ECAL-Proxy/blob/golang/alpha/pkg/quiz/manager_http.go#L32"},"OpenTest")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},"func (m *Manager) OpenTest(c *fiber.Ctx) error\n")),(0,l.kt)("h3",{id:"func-manager-ssehandler"},"func ","(","*","Manager",")"," ",(0,l.kt)("a",{parentName:"h3",href:"https://github.com/ECA-Learning/ECAL-Proxy/blob/golang/alpha/pkg/quiz/manager_sse.go#L15"},"SSEHandler")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},"func (m *Manager) SSEHandler(writer http.ResponseWriter, request *http.Request)\n")),(0,l.kt)("h3",{id:"func-manager-savequestion"},"func ","(","*","Manager",")"," ",(0,l.kt)("a",{parentName:"h3",href:"https://github.com/ECA-Learning/ECAL-Proxy/blob/golang/alpha/pkg/quiz/database.go#L31"},"SaveQuestion")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},"func (m *Manager) SaveQuestion(question gqlmodels.QuestionInput) error\n")),(0,l.kt)("h3",{id:"func-manager-savetest"},"func ","(","*","Manager",")"," ",(0,l.kt)("a",{parentName:"h3",href:"https://github.com/ECA-Learning/ECAL-Proxy/blob/golang/alpha/pkg/quiz/database.go#L50"},"SaveTest")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},"func (m *Manager) SaveTest(data gqlmodels.TestDataInput, students []models.Student) error\n")),(0,l.kt)("h3",{id:"func-manager-setuptestloop"},"func ","(","*","Manager",")"," ",(0,l.kt)("a",{parentName:"h3",href:"https://github.com/ECA-Learning/ECAL-Proxy/blob/golang/alpha/pkg/quiz/test_scheduler.go#L21"},"SetupTestLoop")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},"func (m *Manager) SetupTestLoop(database database.SQLClient)\n")),(0,l.kt)("h3",{id:"func-manager-start"},"func ","(","*","Manager",")"," ",(0,l.kt)("a",{parentName:"h3",href:"https://github.com/ECA-Learning/ECAL-Proxy/blob/golang/alpha/pkg/quiz/manager.go#L26"},"Start")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},"func (m *Manager) Start()\n")),(0,l.kt)("h3",{id:"func-manager-submit"},"func ","(","*","Manager",")"," ",(0,l.kt)("a",{parentName:"h3",href:"https://github.com/ECA-Learning/ECAL-Proxy/blob/golang/alpha/pkg/quiz/manager_http.go#L102"},"Submit")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},"func (m *Manager) Submit(c *fiber.Ctx) error\n")),(0,l.kt)("h3",{id:"func-manager-updatemetrics"},"func ","(","*","Manager",")"," ",(0,l.kt)("a",{parentName:"h3",href:"https://github.com/ECA-Learning/ECAL-Proxy/blob/golang/alpha/pkg/quiz/manager_http.go#L11"},"UpdateMetrics")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},"func (m *Manager) UpdateMetrics(c *fiber.Ctx) error\n")),(0,l.kt)("h3",{id:"func-manager-verifysession"},"func ","(","*","Manager",")"," ",(0,l.kt)("a",{parentName:"h3",href:"https://github.com/ECA-Learning/ECAL-Proxy/blob/golang/alpha/pkg/quiz/manager_http.go#L82"},"VerifySession")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},"func (m *Manager) VerifySession(c *fiber.Ctx) error\n")),(0,l.kt)("h2",{id:"type-scheduler"},"type ",(0,l.kt)("a",{parentName:"h2",href:"https://github.com/ECA-Learning/ECAL-Proxy/blob/golang/alpha/pkg/quiz/session_scheduler.go#L18-L20"},"Scheduler")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},"type Scheduler struct {\n    *gocron.Scheduler\n}\n")),(0,l.kt)("h3",{id:"func-scheduler-setupactionloop"},"func ","(","*","Scheduler",")"," ",(0,l.kt)("a",{parentName:"h3",href:"https://github.com/ECA-Learning/ECAL-Proxy/blob/golang/alpha/pkg/quiz/session_scheduler.go#L52"},"SetupActionLoop")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},"func (scheduler *Scheduler) SetupActionLoop(broker Broker, db Database, r gqlmodels.Rules, q models.Question, a models.Actions)\n")),(0,l.kt)("h3",{id:"func-scheduler-setupjupyterheartbeat"},"func ","(","*","Scheduler",")"," ",(0,l.kt)("a",{parentName:"h3",href:"https://github.com/ECA-Learning/ECAL-Proxy/blob/golang/alpha/pkg/quiz/session_scheduler.go#L32"},"SetupJupyterHeartbeat")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},"func (scheduler *Scheduler) SetupJupyterHeartbeat(broker Broker, tid string)\n")),(0,l.kt)("h2",{id:"type-session"},"type ",(0,l.kt)("a",{parentName:"h2",href:"https://github.com/ECA-Learning/ECAL-Proxy/blob/golang/alpha/pkg/quiz/session.go#L22-L34"},"Session")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},"type Session struct {\n    ID      string\n    Url     url.URL\n    Metrics []models.Metrics\n    Status  models.Status\n    Actions []struct {\n        Timestamp int64\n        Action    models.Action\n    }\n    InitTimestamp int64\n    LastModified  int64\n    Closed        bool\n}\n")),(0,l.kt)("h3",{id:"func-session-checkerror"},"func ","(","*","Session",")"," ",(0,l.kt)("a",{parentName:"h3",href:"https://github.com/ECA-Learning/ECAL-Proxy/blob/golang/alpha/pkg/quiz/session.go#L143"},"CheckError")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},"func (s *Session) CheckError(Rules gqlmodels.Rules) bool\n")),(0,l.kt)("h3",{id:"func-session-checkresponsiveness"},"func ","(","Session",")"," ",(0,l.kt)("a",{parentName:"h3",href:"https://github.com/ECA-Learning/ECAL-Proxy/blob/golang/alpha/pkg/quiz/session.go#L77"},"CheckResponsiveness")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},"func (s Session) CheckResponsiveness(Rules gqlmodels.Rules) bool\n")),(0,l.kt)("h3",{id:"func-session-gettriggers"},"func ","(","*","Session",")"," ",(0,l.kt)("a",{parentName:"h3",href:"https://github.com/ECA-Learning/ECAL-Proxy/blob/golang/alpha/pkg/quiz/session.go#L187"},"GetTriggers")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},"func (s *Session) GetTriggers(Rules gqlmodels.Rules, q models.Question) int\n")),(0,l.kt)("h3",{id:"func-session-triggeraction"},"func ","(","*","Session",")"," ",(0,l.kt)("a",{parentName:"h3",href:"https://github.com/ECA-Learning/ECAL-Proxy/blob/golang/alpha/pkg/quiz/session.go#L208"},"TriggerAction")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},"func (s *Session) TriggerAction(a models.Action, broker Broker)\n")),(0,l.kt)("h3",{id:"func-session-update"},"func ","(","*","Session",")"," ",(0,l.kt)("a",{parentName:"h3",href:"https://github.com/ECA-Learning/ECAL-Proxy/blob/golang/alpha/pkg/quiz/session.go#L36"},"Update")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},"func (s *Session) Update(m models.Metrics)\n")),(0,l.kt)("h3",{id:"func-session-updateerror"},"func ","(","*","Session",")"," ",(0,l.kt)("a",{parentName:"h3",href:"https://github.com/ECA-Learning/ECAL-Proxy/blob/golang/alpha/pkg/quiz/session.go#L114"},"UpdateError")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},"func (s *Session) UpdateError(m models.Metrics)\n")),(0,l.kt)("h3",{id:"func-session-updatemoduleandfunctionusage"},"func ","(","*","Session",")"," ",(0,l.kt)("a",{parentName:"h3",href:"https://github.com/ECA-Learning/ECAL-Proxy/blob/golang/alpha/pkg/quiz/session.go#L171"},"UpdateModuleAndFunctionUsage")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},"func (s *Session) UpdateModuleAndFunctionUsage(m models.Metrics) error\n")),(0,l.kt)("h3",{id:"func-session-updateresponsiveness"},"func ","(","*","Session",")"," ",(0,l.kt)("a",{parentName:"h3",href:"https://github.com/ECA-Learning/ECAL-Proxy/blob/golang/alpha/pkg/quiz/session.go#L44"},"UpdateResponsiveness")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},"func (s *Session) UpdateResponsiveness(m models.Metrics)\n")),(0,l.kt)("h2",{id:"type-test"},"type ",(0,l.kt)("a",{parentName:"h2",href:"https://github.com/ECA-Learning/ECAL-Proxy/blob/golang/alpha/pkg/quiz/test.go#L23-L36"},"Test")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},'type Test struct {\n    ID                  string                              `json:"id"`\n    SessionDB           *database.BadgerClient              `json:"-"`\n    Scheduler           Scheduler                           `json:"-"`\n    Broker              *net.Broker                         `json:"-"`\n    SessionDBPath       string                              `json:"path"`\n    AllowedNotebookURLs []url.URL                           `json:"allowedNotebookURLs"`\n    PinIDMap            map[string]string                   `json:"-"`\n    Rules               gqlmodels.Rules                     `json:"rules"`\n    Question            models.Question                     `json:"question"`\n    Metrics             []*gqlmodels.Metric                 `json:"-"`\n    MetricObservers     map[string]chan []*gqlmodels.Metric `json:"-"`\n    Mu                  *sync.Mutex                         `json:"-"`\n}\n')),(0,l.kt)("h3",{id:"func-test-close"},"func ","(","*","Test",")"," ",(0,l.kt)("a",{parentName:"h3",href:"https://github.com/ECA-Learning/ECAL-Proxy/blob/golang/alpha/pkg/quiz/test.go#L56"},"Close")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},"func (t *Test) Close()\n")),(0,l.kt)("h3",{id:"func-test-createsession"},"func ","(","*","Test",")"," ",(0,l.kt)("a",{parentName:"h3",href:"https://github.com/ECA-Learning/ECAL-Proxy/blob/golang/alpha/pkg/quiz/test.go#L61"},"CreateSession")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},"func (t *Test) CreateSession(s Session)\n")),(0,l.kt)("h3",{id:"func-test-serialize"},"func ","(","*","Test",")"," ",(0,l.kt)("a",{parentName:"h3",href:"https://github.com/ECA-Learning/ECAL-Proxy/blob/golang/alpha/pkg/quiz/test.go#L79"},"Serialize")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},"func (t *Test) Serialize() datatypes.JSON\n")),(0,l.kt)("h3",{id:"func-test-setupmetricloop"},"func ","(","*","Test",")"," ",(0,l.kt)("a",{parentName:"h3",href:"https://github.com/ECA-Learning/ECAL-Proxy/blob/golang/alpha/pkg/quiz/session_scheduler.go#L97"},"SetupMetricLoop")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},"func (t *Test) SetupMetricLoop()\n")),(0,l.kt)("h3",{id:"func-test-start"},"func ","(","*","Test",")"," ",(0,l.kt)("a",{parentName:"h3",href:"https://github.com/ECA-Learning/ECAL-Proxy/blob/golang/alpha/pkg/quiz/test.go#L38"},"Start")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},"func (t *Test) Start()\n")),(0,l.kt)("h2",{id:"type-testscheduler"},"type ",(0,l.kt)("a",{parentName:"h2",href:"https://github.com/ECA-Learning/ECAL-Proxy/blob/golang/alpha/pkg/quiz/test_scheduler.go#L13-L15"},"TestScheduler")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},"type TestScheduler struct {\n    *gocron.Scheduler\n}\n")),(0,l.kt)("h3",{id:"func-newtestscheduler"},"func ",(0,l.kt)("a",{parentName:"h3",href:"https://github.com/ECA-Learning/ECAL-Proxy/blob/golang/alpha/pkg/quiz/test_scheduler.go#L17"},"NewTestScheduler")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},"func NewTestScheduler() TestScheduler\n")),(0,l.kt)("h1",{id:"services"},"services"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},'import "github.com/ECA-Learning/ECAL-Proxy/pkg/services"\n')),(0,l.kt)("h2",{id:"index-6"},"Index"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#type-parsedpython"},"type ParsedPython")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#type-zerqmqbroker"},"type ZerqMQBroker"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#func-newzmqsocket"},"func NewZMQSocket(endpoint string) (ZerqMQBroker, error)")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#func-zerqmqbroker-bind"},"func (s ","*","ZerqMQBroker) Bind() error")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#func-zerqmqbroker-connect"},"func (s ","*","ZerqMQBroker) Connect() error")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#func-zerqmqbroker-parsenotebookdata"},"func (socket ","*","ZerqMQBroker) ParseNotebookData(input models.Metrics) (ParsedPython, error)")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#func-zerqmqbroker-send"},"func (socket ","*","ZerqMQBroker) Send(msg protoreflect.ProtoMessage, resp protoreflect.ProtoMessage) error"))))),(0,l.kt)("h2",{id:"type-parsedpython"},"type ",(0,l.kt)("a",{parentName:"h2",href:"https://github.com/ECA-Learning/ECAL-Proxy/blob/golang/alpha/pkg/services/nlu.go#L8-L11"},"ParsedPython")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},'type ParsedPython struct {\n    Modules   []string `json:"modules"`\n    Functions []string `json:"function"`\n}\n')),(0,l.kt)("h2",{id:"type-zerqmqbroker"},"type ",(0,l.kt)("a",{parentName:"h2",href:"https://github.com/ECA-Learning/ECAL-Proxy/blob/golang/alpha/pkg/services/zmq_socket.go#L9-L12"},"ZerqMQBroker")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},"type ZerqMQBroker struct {\n    *zmq.Socket\n    Endpoint string\n}\n")),(0,l.kt)("h3",{id:"func-newzmqsocket"},"func ",(0,l.kt)("a",{parentName:"h3",href:"https://github.com/ECA-Learning/ECAL-Proxy/blob/golang/alpha/pkg/services/zmq_socket.go#L14"},"NewZMQSocket")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},"func NewZMQSocket(endpoint string) (ZerqMQBroker, error)\n")),(0,l.kt)("h3",{id:"func-zerqmqbroker-bind"},"func ","(","*","ZerqMQBroker",")"," ",(0,l.kt)("a",{parentName:"h3",href:"https://github.com/ECA-Learning/ECAL-Proxy/blob/golang/alpha/pkg/services/zmq_socket.go#L19"},"Bind")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},"func (s *ZerqMQBroker) Bind() error\n")),(0,l.kt)("h3",{id:"func-zerqmqbroker-connect"},"func ","(","*","ZerqMQBroker",")"," ",(0,l.kt)("a",{parentName:"h3",href:"https://github.com/ECA-Learning/ECAL-Proxy/blob/golang/alpha/pkg/services/zmq_socket.go#L23"},"Connect")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},"func (s *ZerqMQBroker) Connect() error\n")),(0,l.kt)("h3",{id:"func-zerqmqbroker-parsenotebookdata"},"func ","(","*","ZerqMQBroker",")"," ",(0,l.kt)("a",{parentName:"h3",href:"https://github.com/ECA-Learning/ECAL-Proxy/blob/golang/alpha/pkg/services/nlu.go#L13"},"ParseNotebookData")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},"func (socket *ZerqMQBroker) ParseNotebookData(input models.Metrics) (ParsedPython, error)\n")),(0,l.kt)("h3",{id:"func-zerqmqbroker-send"},"func ","(","*","ZerqMQBroker",")"," ",(0,l.kt)("a",{parentName:"h3",href:"https://github.com/ECA-Learning/ECAL-Proxy/blob/golang/alpha/pkg/services/zmq_socket.go#L27"},"Send")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},"func (socket *ZerqMQBroker) Send(msg protoreflect.ProtoMessage, resp protoreflect.ProtoMessage) error\n")),(0,l.kt)("p",null,"Generated by ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/princjef/gomarkdoc"},"gomarkdoc")))}f.isMDXComponent=!0}}]);